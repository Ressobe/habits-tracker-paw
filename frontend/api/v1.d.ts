/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/account/{accountId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get account by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["AccountOverviewDto"];
            "application/json": components["schemas"]["AccountOverviewDto"];
            "text/json": components["schemas"]["AccountOverviewDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update account */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateAccountDto"];
          "application/json": components["schemas"]["UpdateAccountDto"];
          "text/json": components["schemas"]["UpdateAccountDto"];
          "application/*+json": components["schemas"]["UpdateAccountDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    /** Delete account */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/account/{accountId}/transactions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all account transactions */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransactionWithCategoryNameDto"][];
            "application/json": components["schemas"]["TransactionWithCategoryNameDto"][];
            "text/json": components["schemas"]["TransactionWithCategoryNameDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/account/{accountId}/transfers": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all account transfers */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransferWithDestinationAccountNameDto"][];
            "application/json": components["schemas"]["TransferWithDestinationAccountNameDto"][];
            "text/json": components["schemas"]["TransferWithDestinationAccountNameDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/account/{accountId}/saving-transactions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all account saving transactions */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingTransactionWithSavingGoalDto"][];
            "application/json": components["schemas"]["SavingTransactionWithSavingGoalDto"][];
            "text/json": components["schemas"]["SavingTransactionWithSavingGoalDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/account": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create account */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateAccountDto"];
          "application/json": components["schemas"]["CreateAccountDto"];
          "text/json": components["schemas"]["CreateAccountDto"];
          "application/*+json": components["schemas"]["CreateAccountDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["AccountDto"];
            "application/json": components["schemas"]["AccountDto"];
            "text/json": components["schemas"]["AccountDto"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/category/{categoryId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get category by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          categoryId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CategoryDto"];
            "application/json": components["schemas"]["CategoryDto"];
            "text/json": components["schemas"]["CategoryDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update category */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          categoryId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateCategoryDto"];
          "application/json": components["schemas"]["UpdateCategoryDto"];
          "text/json": components["schemas"]["UpdateCategoryDto"];
          "application/*+json": components["schemas"]["UpdateCategoryDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CategoryDto"];
            "application/json": components["schemas"]["CategoryDto"];
            "text/json": components["schemas"]["CategoryDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post?: never;
    /** Delete category by id */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          categoryId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/category": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create category */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateCategoryDto"];
          "application/json": components["schemas"]["CreateCategoryDto"];
          "text/json": components["schemas"]["CreateCategoryDto"];
          "application/*+json": components["schemas"]["CreateCategoryDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/saving-goal/{savingGoalId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get saving goal by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingGoalId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingGoalDto"];
            "application/json": components["schemas"]["SavingGoalDto"];
            "text/json": components["schemas"]["SavingGoalDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update saving goal */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingGoalId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateSavingGoalDto"];
          "application/json": components["schemas"]["UpdateSavingGoalDto"];
          "text/json": components["schemas"]["UpdateSavingGoalDto"];
          "application/*+json": components["schemas"]["UpdateSavingGoalDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingGoalDto"];
            "application/json": components["schemas"]["SavingGoalDto"];
            "text/json": components["schemas"]["SavingGoalDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post?: never;
    /** Delete saving goal by id */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingGoalId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/saving-goal": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create saving goal */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateSavingGoalDto"];
          "application/json": components["schemas"]["CreateSavingGoalDto"];
          "text/json": components["schemas"]["CreateSavingGoalDto"];
          "application/*+json": components["schemas"]["CreateSavingGoalDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/saving-transaction/{savingTransactionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get saving transaction by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingTransactionId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingTransactionDto"];
            "application/json": components["schemas"]["SavingTransactionDto"];
            "text/json": components["schemas"]["SavingTransactionDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update saving transaction */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingTransactionId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateSavingTransactionDto"];
          "application/json": components["schemas"]["UpdateSavingTransactionDto"];
          "text/json": components["schemas"]["UpdateSavingTransactionDto"];
          "application/*+json": components["schemas"]["UpdateSavingTransactionDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingTransactionDto"];
            "application/json": components["schemas"]["SavingTransactionDto"];
            "text/json": components["schemas"]["SavingTransactionDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post?: never;
    /** Delete saving transaction by id */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingTransactionId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/saving-transaction/{savingGoalId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create saving transaction */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          savingGoalId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateSavingTransactionDto"];
          "application/json": components["schemas"]["CreateSavingTransactionDto"];
          "text/json": components["schemas"]["CreateSavingTransactionDto"];
          "application/*+json": components["schemas"]["CreateSavingTransactionDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingTransactionDto"];
            "application/json": components["schemas"]["SavingTransactionDto"];
            "text/json": components["schemas"]["SavingTransactionDto"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/transaction/{transactionId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get transaction by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transactionId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransactionDto"];
            "application/json": components["schemas"]["TransactionDto"];
            "text/json": components["schemas"]["TransactionDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update transaction */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transactionId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateTransactionDto"];
          "application/json": components["schemas"]["UpdateTransactionDto"];
          "text/json": components["schemas"]["UpdateTransactionDto"];
          "application/*+json": components["schemas"]["UpdateTransactionDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransactionDto"];
            "application/json": components["schemas"]["TransactionDto"];
            "text/json": components["schemas"]["TransactionDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post?: never;
    /** Delete transaction by id */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transactionId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/transaction/{accountId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create transaction */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          accountId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateTransactionDto"];
          "application/json": components["schemas"]["CreateTransactionDto"];
          "text/json": components["schemas"]["CreateTransactionDto"];
          "application/*+json": components["schemas"]["CreateTransactionDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/transfer": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Create transfer */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["CreateTransferDto"];
          "application/json": components["schemas"]["CreateTransferDto"];
          "text/json": components["schemas"]["CreateTransferDto"];
          "application/*+json": components["schemas"]["CreateTransferDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransferDto"];
            "application/json": components["schemas"]["TransferDto"];
            "text/json": components["schemas"]["TransferDto"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/transfer/{transferId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get transfer by id */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transferId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransferDto"];
            "application/json": components["schemas"]["TransferDto"];
            "text/json": components["schemas"]["TransferDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    /** Update transfer */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transferId: number;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["UpdateTransferDto"];
          "application/json": components["schemas"]["UpdateTransferDto"];
          "text/json": components["schemas"]["UpdateTransferDto"];
          "application/*+json": components["schemas"]["UpdateTransferDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransferDto"];
            "application/json": components["schemas"]["TransferDto"];
            "text/json": components["schemas"]["TransferDto"];
          };
        };
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ProblemDetails"];
            "application/json": components["schemas"]["ProblemDetails"];
            "text/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post?: never;
    /** Delete transfer by id */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          transferId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/login": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Login */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["LoginDto"];
          "application/json": components["schemas"]["LoginDto"];
          "text/json": components["schemas"]["LoginDto"];
          "application/*+json": components["schemas"]["LoginDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["NewUserDto"];
            "application/json": components["schemas"]["NewUserDto"];
            "text/json": components["schemas"]["NewUserDto"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/register": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Register */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json-patch+json": components["schemas"]["RegisterDto"];
          "application/json": components["schemas"]["RegisterDto"];
          "text/json": components["schemas"]["RegisterDto"];
          "application/*+json": components["schemas"]["RegisterDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/accounts": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all accounts for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["AccountDto"][];
            "application/json": components["schemas"]["AccountDto"][];
            "text/json": components["schemas"]["AccountDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/categories": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all categories for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CategoryDto"][];
            "application/json": components["schemas"]["CategoryDto"][];
            "text/json": components["schemas"]["CategoryDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/saving-goals": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all saving goals for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["SavingGoalDto"][];
            "application/json": components["schemas"]["SavingGoalDto"][];
            "text/json": components["schemas"]["SavingGoalDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/transactions": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get all transactions for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TransactionWithCategoryNameDto"][];
            "application/json": components["schemas"]["TransactionWithCategoryNameDto"][];
            "text/json": components["schemas"]["TransactionWithCategoryNameDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/overview": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get overview of account for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["OverviewDto"];
            "application/json": components["schemas"]["OverviewDto"];
            "text/json": components["schemas"]["OverviewDto"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/income-by-categories": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get income by categories for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CategoryOverviewDto"][];
            "application/json": components["schemas"]["CategoryOverviewDto"][];
            "text/json": components["schemas"]["CategoryOverviewDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/expense-by-categories": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get expense by categories for current user */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CategoryOverviewDto"][];
            "application/json": components["schemas"]["CategoryOverviewDto"][];
            "text/json": components["schemas"]["CategoryOverviewDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/daily-transactions-summary": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get user's daily expenses and incomes for a given date range */
    get: {
      parameters: {
        query?: {
          /** @description Start date of the range */
          startDate?: string;
          /** @description End date of the range */
          endDate?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["DailyTransactionsSummaryDto"][];
            "application/json": components["schemas"]["DailyTransactionsSummaryDto"][];
            "text/json": components["schemas"]["DailyTransactionsSummaryDto"][];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/user/total-flow-summary": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get total flow and percentage breakdown of each transaction type (transaction, transfer, saving) */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["TotalFlowSummaryDto"];
            "application/json": components["schemas"]["TotalFlowSummaryDto"];
            "text/json": components["schemas"]["TotalFlowSummaryDto"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AccountDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int64 */
      currentBalance: number;
      userId: string;
      /** Format: date-time */
      createdAt: string;
    };
    AccountOverviewDto: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: double */
      currentBalance: number;
      /** Format: double */
      income: number;
      /** Format: double */
      expense: number;
      /** Format: date-time */
      createdAt: string;
    };
    CategoryDto: {
      /** Format: int32 */
      id: number;
      userId: string;
      name: string;
    };
    CategoryOverviewDto: {
      /** Format: int32 */
      categoryId: number;
      categoryName: string;
      /** Format: double */
      amount: number;
      /** Format: double */
      percentage: number;
    };
    CreateAccountDto: {
      name: string;
      /** Format: int64 */
      currentBalance: number;
    };
    CreateCategoryDto: {
      name?: string | null;
    };
    CreateSavingGoalDto: {
      name: string;
      /** Format: double */
      targetAmount: number;
    };
    CreateSavingTransactionDto: {
      /** Format: double */
      amount: number;
      /** Format: int32 */
      accountId: number;
      description?: string | null;
    };
    CreateTransactionDto: {
      /** Format: double */
      amount: number;
      transactionType: components["schemas"]["TransactionType"];
      /** Format: int32 */
      categoryId: number;
      description?: string | null;
      /** Format: date-time */
      createdAt: string;
    };
    CreateTransferDto: {
      /** Format: double */
      amount: number;
      description?: string | null;
      /** Format: int32 */
      sourceAccountId: number;
      /** Format: int32 */
      destinationAccountId: number;
      /** Format: date-time */
      createdAt: string;
    };
    DailyTransactionsSummaryDto: {
      /** Format: date-time */
      date: string;
      /** Format: double */
      income: number;
      /** Format: double */
      expense: number;
    };
    LoginDto: {
      /** Format: email */
      email: string;
      password: string;
    };
    NewUserDto: {
      userName?: string | null;
      email?: string | null;
      token?: string | null;
    };
    OverviewDto: {
      /** Format: int32 */
      totalBalance: number;
      /** Format: int32 */
      totalIncome: number;
      /** Format: int32 */
      totalExpense: number;
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      /** Format: int32 */
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
    } & {
      [key: string]: unknown;
    };
    RegisterDto: {
      username: string;
      /** Format: email */
      email: string;
      password: string;
    };
    SavingGoalDto: {
      /** Format: int32 */
      id: number;
      name: string;
      userId: string;
      /** Format: double */
      targetAmount: number;
      /** Format: double */
      currentSaved: number;
      /** Format: date-time */
      createdAt: string;
    };
    SavingTransactionDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      savingGoalId: number;
      /** Format: int32 */
      accountId: number;
      /** Format: double */
      amount: number;
      /** Format: date-time */
      createdAt: string;
    };
    SavingTransactionWithSavingGoalDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      savingGoalId: number;
      savingGoal: components["schemas"]["SavingGoalDto"];
      /** Format: int32 */
      accountId: number;
      /** Format: double */
      amount: number;
      description: string;
      /** Format: date-time */
      createdAt: string;
    };
    TotalFlowSummaryDto: {
      /** Format: double */
      totalFlow: number;
      /** Format: double */
      transactionTotal: number;
      /** Format: double */
      transferTotal: number;
      /** Format: double */
      savingTotal: number;
      /** Format: double */
      transactionPercentage: number;
      /** Format: double */
      transferPercentage: number;
      /** Format: double */
      savingPercentage: number;
    };
    TransactionDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      accountId: number;
      /** Format: double */
      amount: number;
      transactionType: components["schemas"]["TransactionType"];
      /** Format: int32 */
      categoryId: number;
      description: string;
      /** Format: date-time */
      createdAt: string;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    TransactionType: 0 | 1;
    TransactionWithCategoryNameDto: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      accountId: number;
      /** Format: double */
      amount: number;
      transactionType: components["schemas"]["TransactionType"];
      /** Format: int32 */
      categoryId: number;
      categoryName: string;
      description: string;
      /** Format: date-time */
      createdAt: string;
    };
    TransferDto: {
      /** Format: int32 */
      id: number;
      /** Format: double */
      amount: number;
      description: string;
      /** Format: int32 */
      sourceAccountId: number;
      /** Format: int32 */
      destinationAccountId: number;
      /** Format: date-time */
      createdAt: string;
    };
    TransferWithDestinationAccountNameDto: {
      /** Format: int32 */
      id: number;
      /** Format: double */
      amount: number;
      description: string;
      /** Format: int32 */
      sourceAccountId: number;
      /** Format: int32 */
      destinationAccountId: number;
      destinationAccountName: string;
      /** Format: date-time */
      createdAt: string;
    };
    UpdateAccountDto: {
      name?: string | null;
      /** Format: int64 */
      currentBalance?: number;
    };
    UpdateCategoryDto: {
      name?: string | null;
    };
    UpdateSavingGoalDto: {
      name?: string | null;
      /** Format: double */
      targetAmount?: number;
    };
    UpdateSavingTransactionDto: {
      /** Format: double */
      amount?: number;
      /** Format: int32 */
      accountId?: number;
      description?: string | null;
    };
    UpdateTransactionDto: {
      /** Format: int32 */
      amount: number;
      /** Format: int32 */
      accountId: number;
      /** Format: int32 */
      categoryId: number;
      description: string;
      /** Format: date-time */
      createdAt: string;
    };
    UpdateTransferDto: {
      /** Format: double */
      amount?: number;
      description?: string | null;
      /** Format: int32 */
      sourceAccountId?: number;
      /** Format: int32 */
      destinationAccountId?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
